#!/bin/bash

# With the addition of Keystone, to use an openstack cloud you should
# authenticate against keystone, which returns a **Token** and **Service
# Catalog**.  The catalog contains the endpoint for all services the
# user/tenant has access to - including nova, glance, keystone, swift.
#
# *NOTE*: Using the 2.0 *auth api* does not mean that compute api is 2.0.  We
# will use the 1.1 *compute api*

if [ -z "$1" ]
  then

  echo "Below is a list of Openstack Config's you've defined in Chef."

  PS3='Please choose which OpenStack config to use: '
  options=(<%= @configs %>)
  select opt in "${options[@]}"
  do
      case $opt in
        <% node['openstack-clients']['openstackrc']['configs'].each do |name, config| %>
          "<%= name %>")
              echo "Setting OpenStack config to <%= name %>"
              export OS_AUTH_URL=<%= config.OS_AUTH_URL %>

              # With the addition of Keystone we have standardized on the term **tenant**
              # as the entity that owns the resources.
              export OS_TENANT_ID=<%= config.OS_TENANT_ID %>
              export OS_TENANT_NAME="<%= config.OS_TENANT_NAME %>"

              # In addition to the owning entity (tenant), openstack stores the entity
              # performing the action as the **user**.
              export OS_USERNAME="<%= config.OS_USERNAME %>"

              <% if config.attribute?(:OS_PASSWORD) %>
              export OS_PASSWORD="<%= config.OS_PASSWORD %>"
              <% else %>
              # With Keystone you pass the keystone password.
              echo "Please enter your OpenStack Password: "
              read -sr OS_PASSWORD_INPUT
              export OS_PASSWORD=$OS_PASSWORD_INPUT
              <% end %>

              echo "Creating subshell with your OS configs as env variables."
              exec "${@:-$SHELL}"
              ;;
        <% end %>
          "Quit")
              break
              ;;
          *) echo invalid option;;
      esac
  done
else
  case $1 in
    <% node['openstack-clients']['openstackrc']['configs'].each do |name, config| %>
      "<%= name %>")
          echo "Setting OpenStack config to <%= name %>"
          export OS_AUTH_URL=<%= config.OS_AUTH_URL %>

          # With the addition of Keystone we have standardized on the term **tenant**
          # as the entity that owns the resources.
          export OS_TENANT_ID=<%= config.OS_TENANT_ID %>
          export OS_TENANT_NAME="<%= config.OS_TENANT_NAME %>"

          # In addition to the owning entity (tenant), openstack stores the entity
          # performing the action as the **user**.
          export OS_USERNAME="<%= config.OS_USERNAME %>"
          <% if config.attribute?(:OS_PASSWORD) %>
          export OS_PASSWORD="<%= config.OS_PASSWORD %>"
          <% else %>
          # With Keystone you pass the keystone password.
          echo "Please enter your OpenStack Password: "
          read -sr OS_PASSWORD_INPUT
          export OS_PASSWORD=$OS_PASSWORD_INPUT
          <% end %>

          echo "Creating subshell with your OS configs as env variables."
          exec "$SHELL"
          ;;
    <% end %>
      *) echo invalid option;;
  esac
fi
